diff -Naur bugle-0.0.20150628.orig/src/filters/screenshot.c bugle-0.0.20150628/src/filters/screenshot.c
--- bugle-0.0.20150628.orig/src/filters/screenshot.c	2019-01-14 22:28:07.012917096 +0300
+++ bugle-0.0.20150628/src/filters/screenshot.c	2019-01-15 00:27:51.999848575 +0300
@@ -68,7 +68,7 @@
 #   include <swscale.h>
 #  endif
 # endif
-# define CAPTURE_AV_FMT PIX_FMT_RGB24
+# define CAPTURE_AV_FMT AV_PIX_FMT_RGB24
 # define CAPTURE_GL_FMT GL_RGB
 #endif
 #define CAPTURE_GL_ELEMENTS 3
@@ -218,8 +218,7 @@
 static AVFormatContext *video_context = NULL;
 static AVStream *video_stream;
 static AVFrame *video_raw, *video_yuv;
-static uint8_t *video_buffer;
-static size_t video_buffer_size = 2000000; /* FIXME: what should it be? */
+static AVPacket *pkt;
 #if HAVE_LIBSWSCALE
 static struct SwsContext *sws_context = NULL;
 #endif
@@ -231,7 +230,7 @@
     size_t size;
     void *buffer = NULL;
 
-    f = avcodec_alloc_frame();
+    f = av_frame_alloc();
     if (!f)
     {
         bugle_log("screenshot", "video", BUGLE_LOG_ERROR,
@@ -273,7 +272,7 @@
         return BUGLE_FALSE;
     video_stream->id = 0; /* FIXME: what does this parameter do? */
     codec = avcodec_find_encoder_by_name(video_codec);
-    if (!codec) codec = avcodec_find_encoder(CODEC_ID_HUFFYUV);
+    if (!codec) codec = avcodec_find_encoder(AV_CODEC_ID_HUFFYUV);
     if (!codec)
         return BUGLE_FALSE;
     c = video_stream->codec;
@@ -283,11 +282,11 @@
     c->codec_type = AVMEDIA_TYPE_VIDEO;
 #endif
     c->codec_id = codec->id;
-    if (c->codec_id == CODEC_ID_HUFFYUV)
-        c->pix_fmt = PIX_FMT_YUV422P;
+    if (c->codec_id == AV_CODEC_ID_HUFFYUV)
+        c->pix_fmt = AV_PIX_FMT_YUV422P;
     else
-        c->pix_fmt = PIX_FMT_YUV420P;
-    if (c->codec_id == CODEC_ID_FFV1)
+        c->pix_fmt = AV_PIX_FMT_YUV420P;
+    if (c->codec_id == AV_CODEC_ID_FFV1)
         c->strict_std_compliance = -1;
     c->bit_rate = video_bitrate;
     c->width = width;
@@ -297,7 +296,9 @@
     c->gop_size = 12;     /* FIXME: user should specify */
     if (avcodec_open2(c, codec, NULL) < 0)
         return BUGLE_FALSE;
-    video_buffer = bugle_malloc(video_buffer_size);
+    pkt = av_packet_alloc();
+    if (!pkt)
+        return BUGLE_FALSE;
     video_raw = allocate_video_frame(CAPTURE_AV_FMT, width, height, BUGLE_FALSE);
     video_yuv = allocate_video_frame(c->pix_fmt, width, height, BUGLE_TRUE);
 #if LIBAVFORMAT_VERSION_INT >= 0x00350000 /* major of 53 */
@@ -320,7 +321,7 @@
 
 static void lavc_shutdown(void)
 {
-    int i;
+    int i, ret;
     AVCodecContext *c;
     size_t out_size;
 
@@ -328,26 +329,10 @@
     /* Write any delayed frames. */
     do
     {
-        AVPacket pkt;
-        int ret;
-
-        out_size = avcodec_encode_video(c, video_buffer, video_buffer_size, NULL);
-        if (out_size)
+        ret = avcodec_receive_packet(c, pkt);
+        if (ret == 0)
         {
-            av_init_packet(&pkt);
-            pkt.pts = c->coded_frame->pts;
-            if (c->coded_frame->key_frame)
-            {
-#if LIBAVFORMAT_BUILD < 4621
-                pkt.flags |= PKT_FLAG_KEY;
-#else
-                pkt.flags |= AV_PKT_FLAG_KEY;
-#endif
-            }
-            pkt.stream_index = video_stream->index;
-            pkt.data = video_buffer;
-            pkt.size = out_size;
-            ret = av_write_frame(video_context, &pkt);
+            ret = av_write_frame(video_context, pkt);
             if (ret != 0)
             {
                 bugle_log("screenshot", "video", BUGLE_LOG_ERROR,
@@ -355,7 +340,7 @@
                 exit(1);
             }
         }
-    } while (out_size);
+    } while (ret == 0);
 
     /* Close it all down */
     av_write_trailer(video_context);
@@ -364,7 +349,7 @@
     /* We don't free video_raw, since that memory belongs to video_data */
     av_free(video_yuv);
     av_free(video_raw);
-    av_free(video_buffer);
+    av_packet_free(&pkt);
     for (i = 0; i < (int) video_context->nb_streams; i++)
         av_freep(&video_context->streams[i]);
 #if LIBAVFORMAT_VERSION_INT >= 0x00350000 /* major of 53 */
@@ -536,7 +521,6 @@
 {
     screenshot_data *fetch;
     AVCodecContext *c;
-    size_t out_size;
     int i, ret;
     bugle_timespec tv;
     double t = 0.0;
@@ -601,31 +585,18 @@
 #endif
         for (i = 0; i < fetch->multiplicity; i++)
         {
-            out_size = avcodec_encode_video(video_stream->codec,
-                                            video_buffer, video_buffer_size,
-                                            video_yuv);
-            if (out_size != 0)
+            ret = avcodec_send_frame(video_stream->codec, video_yuv);
+            if (ret == 0)
             {
-                AVPacket pkt;
-
-                av_init_packet(&pkt);
-                pkt.pts = c->coded_frame->pts;
-                if (c->coded_frame->key_frame)
-                {
-#if LIBAVFORMAT_BUILD < 4621
-                    pkt.flags |= PKT_FLAG_KEY;
-#else
-                    pkt.flags |= AV_PKT_FLAG_KEY;
-#endif
-                }
-                pkt.stream_index = video_stream->index;
-                pkt.data = video_buffer;
-                pkt.size = out_size;
-                ret = av_write_frame(video_context, &pkt);
-                if (ret != 0)
+                ret = avcodec_receive_packet(video_stream->codec, pkt);
+                if (ret == 0)
                 {
-                    bugle_log("screenshot", "video", BUGLE_LOG_ERROR, "encoding failed");
-                    exit(1);
+                    ret = av_write_frame(video_context, pkt);
+                    if (ret != 0)
+                    {
+                        bugle_log("screenshot", "video", BUGLE_LOG_ERROR, "encoding failed");
+                        exit(1);
+                    }
                 }
             }
         }
