From 662932860af3be32a278d4fceef1a296f89b4592 Mon Sep 17 00:00:00 2001
From: Joan Bruguera <joanbrugueram@gmail.com>
Date: Mon, 20 Apr 2020 13:45:22 +0200
Subject: [PATCH 2/2] Simplify and uniformize singleton initialization

This commit simplifies and uniformizes parameterless singleton
initialization patterns through the code base.

Additionally, and though currently not relevant, the idiom used is both
thread-safe and lazy, as guaranteed by the C++11 standard. See also:
https://en.cppreference.com/w/cpp/language/storage_duration#Static_local_variables

Note that the initializers for the VodManager and SettingManager
singletons were changed in 25575dafc428e07ed5b126af03360a4920752e96.
---
 src/model/badgecontainer.cpp | 14 ++++++--------
 src/model/channelmanager.cpp |  5 +----
 src/model/channelmanager.h   |  1 -
 src/model/viewersmodel.cpp   |  7 +++++--
 src/model/viewersmodel.h     |  6 +-----
 src/network/httpserver.cpp   |  5 +----
 src/network/httpserver.h     |  2 --
 src/power/power.cpp          |  5 +----
 src/power/power.h            |  1 -
 9 files changed, 15 insertions(+), 31 deletions(-)

diff --git a/src/model/badgecontainer.cpp b/src/model/badgecontainer.cpp
index 937ced5..05870bb 100644
--- a/src/model/badgecontainer.cpp
+++ b/src/model/badgecontainer.cpp
@@ -1,14 +1,6 @@
 #include "badgecontainer.h"
 #include "settingsmanager.h"
 
-BadgeContainer *BadgeContainer::instance = 0;
-BadgeContainer *BadgeContainer::getInstance()
-{
-    if (!instance)
-        instance = new BadgeContainer();
-    return instance;
-}
-
 BadgeContainer::BadgeContainer() : netman(NetworkManager::getInstance())
 {
     connect(netman, &NetworkManager::getEmoteSetsOperationFinished, this, &BadgeContainer::onEmoteSetsUpdated);
@@ -23,6 +15,12 @@ BadgeContainer::BadgeContainer() : netman(NetworkManager::getInstance())
     connect(netman, &NetworkManager::getChannelBttvEmotesOperationFinished, this, &BadgeContainer::innerChannelBttvEmotesLoaded);
 }
 
+BadgeContainer *BadgeContainer::getInstance()
+{
+    static BadgeContainer *instance = new BadgeContainer();
+    return instance;
+}
+
 bool BadgeContainer::getChannelBadgeUrl(const QString channelId, const QString badgeName, const QString imageFormat, QString &outUrl) const {
     auto channelEntry = channelBadgeUrls.find(channelId);
     if (channelEntry != channelBadgeUrls.end()) {
diff --git a/src/model/channelmanager.cpp b/src/model/channelmanager.cpp
index a5b73c7..8007d14 100644
--- a/src/model/channelmanager.cpp
+++ b/src/model/channelmanager.cpp
@@ -15,8 +15,6 @@
 #include "channelmanager.h"
 #include <QCoreApplication>
 
-ChannelManager *ChannelManager::instance = 0;
-
 ChannelManager::ChannelManager() :
     netman(NetworkManager::getInstance()),
     settingsManager(SettingsManager::getInstance())
@@ -63,8 +61,7 @@ ChannelManager::ChannelManager() :
 }
 
 ChannelManager *ChannelManager::getInstance() {
-    if (!instance)
-        instance = new ChannelManager();
+    static ChannelManager *instance = new ChannelManager();
     return instance;
 }
 
diff --git a/src/model/channelmanager.h b/src/model/channelmanager.h
index c1e0df1..4ae3863 100644
--- a/src/model/channelmanager.h
+++ b/src/model/channelmanager.h
@@ -56,7 +56,6 @@ class ChannelManager: public QObject
     ChannelListModel *createFollowedChannelsModel();
     bool isAccessTokenAvailable() { return settingsManager->hasAccessToken(); }
 
-    static ChannelManager *instance;
     ChannelManager();
 
 public:
diff --git a/src/model/viewersmodel.cpp b/src/model/viewersmodel.cpp
index 7b73324..9a96cbe 100644
--- a/src/model/viewersmodel.cpp
+++ b/src/model/viewersmodel.cpp
@@ -1,12 +1,15 @@
 #include "viewersmodel.h"
 
-ViewersModel *ViewersModel::instance = 0;
-
 ViewersModel::ViewersModel(QObject *parent) : QObject(parent), netman(NetworkManager::getInstance())
 {
     connect(netman, &NetworkManager::chatterListLoadOperationFinished, this, &ViewersModel::processChatterList);
 }
 
+ViewersModel *ViewersModel::getInstance() {
+    static ViewersModel *instance = new ViewersModel();
+    return instance;
+}
+
 void ViewersModel::processChatterList(QMap<QString, QList<QString>> chatters)
 {
     QVariantMap out;
diff --git a/src/model/viewersmodel.h b/src/model/viewersmodel.h
index b286687..1d4c891 100644
--- a/src/model/viewersmodel.h
+++ b/src/model/viewersmodel.h
@@ -16,11 +16,7 @@ class ViewersModel : public QObject
     explicit ViewersModel(QObject *parent = nullptr);
 
 public:
-    static ViewersModel *getInstance() {
-        if (!instance)
-            instance = new ViewersModel();
-        return instance;
-    }
+    static ViewersModel *getInstance();
 
 signals:
     void chatterListLoaded(QVariantMap chatters);
diff --git a/src/network/httpserver.cpp b/src/network/httpserver.cpp
index b0368eb..fa938d0 100644
--- a/src/network/httpserver.cpp
+++ b/src/network/httpserver.cpp
@@ -1,15 +1,12 @@
 #include "httpserver.h"
 
-HttpServer *HttpServer::instance = 0;
-
 HttpServer::HttpServer(QObject *parent): QObject(parent)
 {
 
 }
 
 HttpServer *HttpServer::getInstance() {
-    if (!instance)
-        instance = new HttpServer();
+    static HttpServer *instance = new HttpServer();
     return instance;
 }
 
diff --git a/src/network/httpserver.h b/src/network/httpserver.h
index d1d6422..0bdc8d8 100644
--- a/src/network/httpserver.h
+++ b/src/network/httpserver.h
@@ -19,8 +19,6 @@ class HttpServer: public QObject
     bool listenError = false;
     QString m_port;
 
-    static HttpServer *instance;
-
     explicit HttpServer(QObject *parent = 0);
 public:
     static HttpServer *getInstance();
diff --git a/src/power/power.cpp b/src/power/power.cpp
index 28c6b83..4c3e66d 100644
--- a/src/power/power.cpp
+++ b/src/power/power.cpp
@@ -31,8 +31,6 @@
 #include <QtAndroidExtras>
 #endif
 
-Power *Power::instance = 0;
-
 Power::Power() :
     cookie(0)
 {
@@ -41,8 +39,7 @@ Power::Power() :
 
 Power *Power::getInstance()
 {
-    if (!instance)
-        instance = new Power();
+    static Power *instance = new Power();
     return instance;
 }
 
diff --git a/src/power/power.h b/src/power/power.h
index fdf1181..1553ede 100644
--- a/src/power/power.h
+++ b/src/power/power.h
@@ -14,7 +14,6 @@ class Power: public QObject
 
     Q_PROPERTY(bool screensaver WRITE setScreensaver)
 
-    static Power *instance;
     Power();
 
 public:
-- 
2.26.2

