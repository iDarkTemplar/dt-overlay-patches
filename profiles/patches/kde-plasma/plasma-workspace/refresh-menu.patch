From a3ef7182b7720a10eebfb628699b86bd52a2bcce Mon Sep 17 00:00:00 2001
From: "i.Dark_Templar" <darktemplar@dark-templar-archives.net>
Date: Fri, 11 Aug 2017 23:08:56 +0300
Subject: [PATCH] Fix multilevel dynamic context menu issues for system tray

Also revert https://phabricator.kde.org/D11586 since it breaks everything.

This should fix https://bugs.kde.org/show_bug.cgi?id=383202
---
 libdbusmenuqt/dbusmenuimporter.cpp | 71 +++++++++++-------------------
 1 file changed, 25 insertions(+), 46 deletions(-)

diff --git a/libdbusmenuqt/dbusmenuimporter.cpp b/libdbusmenuqt/dbusmenuimporter.cpp
index cab0a26ed..8c7a5357e 100644
--- a/libdbusmenuqt/dbusmenuimporter.cpp
+++ b/libdbusmenuqt/dbusmenuimporter.cpp
@@ -401,60 +401,39 @@ void DBusMenuImporter::slotGetLayoutFinished(QDBusPendingCallWatcher *watcher)
         return;
     }
 
-    //remove outdated actions
-    QSet<int> newDBusMenuItemIds;
-    newDBusMenuItemIds.reserve(rootItem.children.count());
-    for (const DBusMenuLayoutItem &item: rootItem.children) {
-        newDBusMenuItemIds << item.id;
-    }
     for (QAction *action: menu->actions()) {
         int id = action->property(DBUSMENU_PROPERTY_ID).toInt();
-        if (! newDBusMenuItemIds.contains(id)) {
-            // Not calling removeAction() as QMenu will immediately close when it becomes empty,
-            // which can happen when an application completely reloads this menu.
-            // When the action is deleted deferred, it is removed from the menu.
-            action->deleteLater();
-            if (action->menu()) {
-                action->menu()->deleteLater();
-            }
-            d->m_actionForId.remove(id);
+        action->deleteLater();
+        if (action->menu()) {
+            action->menu()->deleteLater();
         }
+        d->m_actionForId.remove(id);
     }
 
-    //insert or update new actions into our menu
+    // Clear menu, all actions either were just deleted, or will be added back in following loop
+    // Don't cache any actions since they can change type (i.e. action can become separator) and it'd cause a bug
+    menu->clear();
+
+    //insert new or updated actions into our menu
     for (const DBusMenuLayoutItem &dbusMenuItem: rootItem.children) {
-        DBusMenuImporterPrivate::ActionForId::Iterator it = d->m_actionForId.find(dbusMenuItem.id);
-        QAction *action = nullptr;
-        if (it == d->m_actionForId.end()) {
-            int id = dbusMenuItem.id;
-            action = d->createAction(id, dbusMenuItem.properties, menu);
-            d->m_actionForId.insert(id, action);
-
-            connect(action, &QObject::destroyed, this, [this, id]() {
-                d->m_actionForId.remove(id);
-            });
-
-            connect(action, &QAction::triggered, this, [ id, this]() {
-                sendClickedEvent(id);
-            });
-
-            if (QMenu *menuAction = action->menu()) {
-                connect(menuAction, &QMenu::aboutToShow, this, &DBusMenuImporter::slotMenuAboutToShow, Qt::UniqueConnection);
-            }
-            connect(menu, &QMenu::aboutToHide, this, &DBusMenuImporter::slotMenuAboutToHide, Qt::UniqueConnection);
+        int id = dbusMenuItem.id;
+        QAction *action = d->createAction(id, dbusMenuItem.properties, menu);
+        d->m_actionForId.insert(id, action);
 
-            menu->addAction(action);
-        } else {
-            action = *it;
-            QStringList filteredKeys = dbusMenuItem.properties.keys();
-            filteredKeys.removeOne("type");
-            filteredKeys.removeOne("toggle-type");
-            filteredKeys.removeOne("children-display");
-            d->updateAction(*it, dbusMenuItem.properties, filteredKeys);
-            // Move the action to the tail so we can keep the order same as the dbus request.
-            menu->removeAction(action);
-            menu->addAction(action);
+        connect(action, &QObject::destroyed, this, [this, id]() {
+            d->m_actionForId.remove(id);
+        });
+
+        connect(action, &QAction::triggered, this, [ id, this]() {
+            sendClickedEvent(id);
+        });
+
+        if (QMenu *menuAction = action->menu()) {
+            connect(menuAction, &QMenu::aboutToShow, this, &DBusMenuImporter::slotMenuAboutToShow, Qt::UniqueConnection);
         }
+        connect(menu, &QMenu::aboutToHide, this, &DBusMenuImporter::slotMenuAboutToHide, Qt::UniqueConnection);
+
+        menu->addAction(action);
     }
 
     emit menuUpdated(menu);
-- 
2.26.2

