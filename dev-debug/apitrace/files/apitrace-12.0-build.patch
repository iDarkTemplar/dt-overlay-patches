diff --git a/CMakeLists.txt b/CMakeLists.txt
index 34123b30..3fef594a 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -535,7 +535,7 @@ include_directories (${CMAKE_CURRENT_SOURCE_DIR}/compat)
 if (NOT WIN32 AND NOT ENABLE_STATIC_EXE)
 
     if (NOT ENABLE_STATIC_SNAPPY)
-        find_package (Snappy)
+        find_package (Snappy CONFIG REQUIRED)
     endif ()
 
     # zlib 1.2.4-1.2.5 made it impossible to read the last block of incomplete
@@ -556,7 +556,9 @@ if (NOT WIN32 AND NOT ENABLE_STATIC_EXE)
         pkg_check_modules (BROTLIENC IMPORTED_TARGET libbrotlienc>=1.0.7)
     endif ()
 
-    find_package (GTest)
+    if (BUILD_TESTING)
+        find_package (GTest)
+    endif ()
 endif ()
 
 add_subdirectory (thirdparty)
diff --git a/thirdparty/CMakeLists.txt b/thirdparty/CMakeLists.txt
index 34eb7f7e..13b1cf83 100644
--- a/thirdparty/CMakeLists.txt
+++ b/thirdparty/CMakeLists.txt
@@ -16,42 +16,23 @@ function (include_with_scope)
     include (${ARGV})
 endfunction ()
 
-set (SUBMODULES_MISSING FALSE)
-foreach (path IN ITEMS
-    brotli/LICENSE
-    gtest/LICENSE
-    libbacktrace/LICENSE
-    libpng/LICENSE
-    snappy/COPYING
-    zlib/README
-    directxmath/LICENSE
-)
-    if (NOT EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/${path}")
-        message (SEND_ERROR "error: ${CMAKE_CURRENT_SOURCE_DIR}/${path} does not exist")
-        set (SUBMODULES_MISSING TRUE)
-    endif ()
-endforeach ()
-if (SUBMODULES_MISSING)
-    message (FATAL_ERROR "Update Git submodules by running\ngit submodule update --init --depth 1 --recursive")
-endif ()
-
 if (ENABLE_STATIC_SNAPPY OR NOT Snappy_FOUND)
-    message (STATUS "Using bundled Snappy")
+    message (FATAL_ERROR "Missing Snappy")
     include_with_scope (snappy.cmake)
 endif ()
 
 if (NOT ZLIB_FOUND)
-    message (STATUS "Using bundled ZLIB")
+    message (FATAL_ERROR "Missing ZLIB")
     include_with_scope (zlib.cmake)
 endif ()
 
 if (NOT PNG_FOUND)
-    message (STATUS "Using bundled PNG")
+    message (FATAL_ERROR "Missing PNG")
     include_with_scope (libpng.cmake)
 endif ()
 
 if (NOT BROTLIDEC_FOUND OR NOT BROTLIENC_FOUND)
-    message (STATUS "Using bundled Brotli")
+    message (FATAL_ERROR "Missing Brotli")
     include_with_scope (brotli.cmake)
 endif ()
 
@@ -59,10 +40,12 @@ if (CMAKE_EXECUTABLE_FORMAT STREQUAL "ELF")
     include_with_scope (libbacktrace.cmake)
 endif ()
 
-# We use non-standard C++ flags, so we can't just use GTest's CMakeLists.txt
-if (NOT GTEST_FOUND)
-    message (STATUS "Using bundled GTest")
-    include_with_scope (gtest.cmake)
+if (BUILD_TESTING)
+    # We use non-standard C++ flags, so we can't just use GTest's CMakeLists.txt
+    if (NOT GTEST_FOUND)
+        message (FATAL_ERROR "Missing GTest")
+        include_with_scope (gtest.cmake)
+    endif ()
 endif ()
 
 if (MSVC)
