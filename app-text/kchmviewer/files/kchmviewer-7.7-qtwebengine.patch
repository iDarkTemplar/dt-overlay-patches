diff --git a/src/config.cpp b/src/config.cpp
index 70026fa..c165c8f 100644
--- a/src/config.cpp
+++ b/src/config.cpp
@@ -51,15 +51,12 @@ Config::Config()
 	m_advLayoutDirectionRL = settings.value( "advanced/layoutltr", false ).toBool();
 	m_advAutodetectEncoding = settings.value( "advanced/autodetectenc", false ).toBool();
 	m_advExternalEditorPath = settings.value( "advanced/editorpath", "/usr/bin/kate" ).toString();
-	m_advCheckNewVersion = settings.value( "advanced/checknewver", true ).toBool();
 	m_toolbarMode = (Config::ToolbarMode) settings.value( "advanced/toolbarmode", TOOLBAR_LARGEICONSTEXT ).toInt();
 	m_lastOpenedDir = settings.value( "advanced/lastopendir", "." ).toString();
 
 	m_browserEnableJS = settings.value( "browser/enablejs", true ).toBool();
-	m_browserEnableJava = settings.value( "browser/enablejava", false ).toBool();
 	m_browserEnablePlugins = settings.value( "browser/enableplugins", true ).toBool();
 	m_browserEnableImages  = settings.value( "browser/enableimages", true ).toBool();
-	m_browserEnableOfflineStorage = settings.value( "browser/enableofflinestorage", false ).toBool();
 	m_browserEnableLocalStorage = settings.value( "browser/enablelocalstorage", false ).toBool();
 	m_browserEnableRemoteContent = settings.value( "browser/enableremotecontent", false ).toBool();
     m_browserHighlightSearchResults = settings.value( "browser/highlightsearchresults", true ).toBool();
@@ -88,15 +85,12 @@ void Config::save( )
 	settings.setValue( "advanced/layoutltr", m_advLayoutDirectionRL );
 	settings.setValue( "advanced/autodetectenc", m_advAutodetectEncoding );
 	settings.setValue( "advanced/editorpath", m_advExternalEditorPath );
-	settings.setValue( "advanced/checknewver", m_advCheckNewVersion );
 	settings.setValue( "advanced/toolbarmode", m_toolbarMode );
 	settings.setValue( "advanced/lastopendir", m_lastOpenedDir );
 
 	settings.setValue( "browser/enablejs", m_browserEnableJS );
-	settings.setValue( "browser/enablejava", m_browserEnableJava );
 	settings.setValue( "browser/enableplugins", m_browserEnablePlugins );
 	settings.setValue( "browser/enableimages", m_browserEnableImages );
-	settings.setValue( "browser/enableofflinestorage", m_browserEnableOfflineStorage );
 	settings.setValue( "browser/enablelocalstorage", m_browserEnableLocalStorage );
 	settings.setValue( "browser/enableremotecontent", m_browserEnableRemoteContent );
     settings.setValue( "browser/highlightsearchresults", m_browserHighlightSearchResults );
diff --git a/src/config.h b/src/config.h
index d42698f..cf92b18 100644
--- a/src/config.h
+++ b/src/config.h
@@ -71,10 +71,8 @@ class Config
 		ToolbarMode			m_toolbarMode;
 		
 		bool				m_browserEnableJS;
-		bool				m_browserEnableJava;
 		bool				m_browserEnablePlugins;
 		bool				m_browserEnableImages;
-		bool				m_browserEnableOfflineStorage;
 		bool				m_browserEnableLocalStorage;
 		bool				m_browserEnableRemoteContent;
         bool                m_browserHighlightSearchResults;
@@ -85,7 +83,6 @@ class Config
 		QString				m_advExternalEditorPath;
 		bool				m_advLayoutDirectionRL;
 		bool				m_advAutodetectEncoding;
-		bool				m_advCheckNewVersion;
 
 	private:
 		QString				m_datapath;
diff --git a/src/dataprovider_qwebengine.cpp b/src/dataprovider_qwebengine.cpp
index 3700346..8e54748 100644
--- a/src/dataprovider_qwebengine.cpp
+++ b/src/dataprovider_qwebengine.cpp
@@ -14,8 +14,6 @@ void DataProvider_QWebEngine::requestStarted( QWebEngineUrlRequestJob *request )
     QUrl url = request->requestUrl();
     bool htmlfile = url.path().endsWith( ".html" ) || url.path().endsWith( ".htm" ) || url.path().endsWith( ".xhtml" );
 
-    qDebug("requestStarted %s", qPrintable(url.toString()) );
-
     // Retreive the data from ebook file
     QByteArray buf;
 
diff --git a/src/dialog_setup.cpp b/src/dialog_setup.cpp
index 87dab30..30d5f9a 100644
--- a/src/dialog_setup.cpp
+++ b/src/dialog_setup.cpp
@@ -70,9 +70,7 @@ DialogSetup::DialogSetup(QWidget *parent)
 	// Browser settings
 	m_enableImages->setChecked( pConfig->m_browserEnableImages );
 	m_enableJS->setChecked( pConfig->m_browserEnableJS );
-	m_enableJava->setChecked( pConfig->m_browserEnableJava );
 	m_enablePlugins->setChecked( pConfig->m_browserEnablePlugins );
-	m_enableOfflineStorage->setChecked( pConfig->m_browserEnableOfflineStorage );
 	m_enableLocalStorage->setChecked( pConfig->m_browserEnableLocalStorage );
     m_openAllTOCEntries->setChecked( pConfig->m_tocOpenAllEntries );
     boxUseSingleClick->setChecked( pConfig->m_tabUseSingleClick );
@@ -95,8 +93,6 @@ DialogSetup::DialogSetup(QWidget *parent)
 			rbToolbarText->setChecked( true );
 			break;
 	}
-
-	cbCheckForUpdates->setChecked( pConfig->m_advCheckNewVersion );
 }
 
 DialogSetup::~DialogSetup()
@@ -146,9 +142,7 @@ void DialogSetup::accept()
 
 	Check_Need_Restart( m_enableImages, &pConfig->m_browserEnableImages, &need_restart );
 	Check_Need_Restart( m_enableJS, &pConfig->m_browserEnableJS, &need_restart );
-	Check_Need_Restart( m_enableJava, &pConfig->m_browserEnableJava, &need_restart );
 	Check_Need_Restart( m_enablePlugins, &pConfig->m_browserEnablePlugins, &need_restart );
-	Check_Need_Restart( m_enableOfflineStorage, &pConfig->m_browserEnableOfflineStorage, &need_restart );
 	Check_Need_Restart( m_enableLocalStorage, &pConfig->m_browserEnableLocalStorage, &need_restart );
     Check_Need_Restart( boxUseSingleClick, &pConfig->m_tabUseSingleClick, &need_restart );
 
@@ -178,7 +172,6 @@ void DialogSetup::accept()
 	
 	// Autodetect encoding
 	Check_Need_Restart( boxAutodetectEncoding, &pConfig->m_advAutodetectEncoding, &need_restart );
-	pConfig->m_advCheckNewVersion = cbCheckForUpdates->isChecked();
 
 	// Layout direction management
 	bool layout_rl = boxLayoutDirectionRL->isChecked();
diff --git a/src/dialog_setup.ui b/src/dialog_setup.ui
index 727f9d5..d5d3d8e 100644
--- a/src/dialog_setup.ui
+++ b/src/dialog_setup.ui
@@ -307,16 +307,6 @@
             </property>
            </widget>
           </item>
-          <item>
-           <widget class="QCheckBox" name="m_enableJava">
-            <property name="text">
-             <string>Enable &amp;Java</string>
-            </property>
-            <property name="shortcut">
-             <string>Alt+J</string>
-            </property>
-           </widget>
-          </item>
           <item>
            <widget class="QCheckBox" name="m_enableJS">
             <property name="text">
@@ -327,16 +317,6 @@
             </property>
            </widget>
           </item>
-          <item>
-           <widget class="QCheckBox" name="m_enableOfflineStorage">
-            <property name="text">
-             <string>Enable &amp;offline storage (HTML5)</string>
-            </property>
-            <property name="shortcut">
-             <string>Alt+R</string>
-            </property>
-           </widget>
-          </item>
           <item>
            <widget class="QCheckBox" name="m_enableLocalStorage">
             <property name="text">
@@ -482,16 +462,6 @@
             </property>
            </widget>
           </item>
-          <item>
-           <widget class="QCheckBox" name="cbCheckForUpdates">
-            <property name="whatsThis">
-             <string>If this option is enabled, the application will check for updates (when new version of application is released). If a new version is available, the program will show a messagebox dialog informing you about new version. This check will only performed once in 24 hours. No user information is requested or transmitted from your computer during this check.</string>
-            </property>
-            <property name="text">
-             <string>Perform a check whether a new version is available (once a week)</string>
-            </property>
-           </widget>
-          </item>
          </layout>
         </widget>
        </item>
@@ -586,7 +556,6 @@
   <tabstop>m_radioNewChmOpenAlways</tabstop>
   <tabstop>m_radioNewChmAsk</tabstop>
   <tabstop>m_radioNewChmOpenNever</tabstop>
-  <tabstop>m_enableJava</tabstop>
   <tabstop>m_enablePlugins</tabstop>
   <tabstop>m_advViewSourceInternal</tabstop>
   <tabstop>m_advViewSourceExternal</tabstop>
diff --git a/src/main.cpp b/src/main.cpp
index b17d203..7a7bfeb 100644
--- a/src/main.cpp
+++ b/src/main.cpp
@@ -23,6 +23,9 @@
 #include "dbus_interface.h"
 #include "version.h"
 
+#include <QWebEngineProfile>
+#include <QWebEngineUrlScheme>
+
 #if !defined (WIN32)
 	#include <QtDBus/QtDBus>
 #endif
@@ -67,6 +70,10 @@ int main( int argc, char ** argv )
 	QCoreApplication::setOrganizationDomain("kchmviewer.net");
 	QCoreApplication::setApplicationName("kchmviewer");
 
+	QWebEngineUrlScheme ms_its_scheme("ms-its");
+	ms_its_scheme.setSyntax(QWebEngineUrlScheme::Syntax::Path);
+	QWebEngineUrlScheme::registerScheme(ms_its_scheme);
+
 	// Configuration
 	pConfig = new Config();
 
diff --git a/src/mainwindow.cpp b/src/mainwindow.cpp
index bdcd4b8..dc28522 100644
--- a/src/mainwindow.cpp
+++ b/src/mainwindow.cpp
@@ -226,18 +226,6 @@ void MainWindow::checkForSharedMemoryMessage()
         parseCmdLineArgs( args, true );
 }
 
-void MainWindow::checkNewVersionAvailable()
-{
-	// Create a New version available object if necessary. This object will auto-delete itself
-	CheckNewVersion * pNewVer = new CheckNewVersion();
-
-	connect( pNewVer, SIGNAL(error(int)), this, SLOT(newVerAvailError(int)) );
-	connect( pNewVer, SIGNAL(newVersionAvailable( NewVersionMetaMap )), this, SLOT(newVerAvailable(NewVersionMetaMap)) );
-
-	pNewVer->setUrl( "http://www.kchmviewer.net/latestversion.txt" );
-	pNewVer->start();
-}
-
 
 bool MainWindow::loadFile ( const QString &loadFileName, bool call_open_page )
 {
@@ -559,7 +547,7 @@ void MainWindow::printHelpAndExit()
 bool MainWindow::parseCmdLineArgs(const QStringList& args , bool from_another_app )
 {
     QString filename, search_query, search_index, open_url, search_toc;
-    bool do_autotest = false, disable_vcheck = false, force_background = false;
+    bool do_autotest = false, force_background = false;
 
 	// argv[0] in Qt is still a program name
     for ( int i = 1; i < args.size(); i++  )
@@ -578,8 +566,6 @@ bool MainWindow::parseCmdLineArgs(const QStringList& args , bool from_another_ap
             i++; // ignore
         else if ( args[i] == "-background" )
             force_background = true;
-        else if ( args[i] == "-novcheck" )
-            disable_vcheck = true;
         else if ( args[i] == "-v" || args[i] == "--version" )
         {
             printf("kchmviewer version %d.%d built at %s %s\n", APP_VERSION_MAJOR, APP_VERSION_MINOR, __DATE__, __TIME__ );
@@ -605,20 +591,6 @@ bool MainWindow::parseCmdLineArgs(const QStringList& args , bool from_another_ap
         }
 	}
 
-    // Check for a new version if needed
-    if ( pConfig->m_advCheckNewVersion && !disable_vcheck )
-    {
-        QSettings settings;
-
-        if ( settings.contains( "advanced/lastupdate" ) )
-        {
-            QDateTime lastupdate = settings.value( "advanced/lastupdate" ).toDateTime();
-
-            if ( lastupdate.secsTo( QDateTime::currentDateTime() ) >= 86400 * 7 ) // seven days
-                checkNewVersionAvailable();
-        }
-    }
-
     // Opening the file?
 	if ( !filename.isEmpty() )
 	{
@@ -1167,7 +1139,6 @@ void MainWindow::setupActions()
 	// Settings
 	connect( settings_SettingsAction, SIGNAL( triggered() ), this, SLOT( actionChangeSettings() ) );
 	connect( actionEdit_toolbars, SIGNAL( triggered() ), this, SLOT( actionEditToolbars() ) );
-	connect( actionCheck_for_updates, SIGNAL(triggered()), this, SLOT(checkNewVersionAvailable()) );
 
 	// Help menu
 	connect( actionAbout_kchmviewer, SIGNAL(triggered()), this, SLOT(actionAboutApp()) );
@@ -1191,11 +1162,6 @@ void MainWindow::setupActions()
 	
 	// Navigation panel visibility
 	connect( m_navPanel, SIGNAL(visibilityChanged(bool)), this, SLOT( navigatorVisibilityChanged(bool) ) );
-
-	// "What's this" action
-	QAction * whatsthis = QWhatsThis::createAction( this );
-	menuHelp->addAction( whatsthis );
-	viewToolbar->addAction( whatsthis );
 		
 	// Tab switching actions
 	(void) new QShortcut( QKeySequence( i18n("Ctrl+1") ),
diff --git a/src/mainwindow.h b/src/mainwindow.h
index d24b4d3..f73713f 100644
--- a/src/mainwindow.h
+++ b/src/mainwindow.h
@@ -143,8 +143,6 @@ class MainWindow : public QMainWindow, public Ui::MainWindow
 		void		updateToolbars();
 		void		updateActions();
 
-		void		checkNewVersionAvailable();
-
 	protected slots:
 		// Called from the timer in main constructor
 		void 		firstShow();
diff --git a/src/mainwindow.ui b/src/mainwindow.ui
index d98d88b..6b6de04 100644
--- a/src/mainwindow.ui
+++ b/src/mainwindow.ui
@@ -29,8 +29,6 @@
     </property>
     <addaction name="settings_SettingsAction"/>
     <addaction name="actionEdit_toolbars"/>
-    <addaction name="separator"/>
-    <addaction name="actionCheck_for_updates"/>
    </widget>
    <widget class="QMenu" name="menu_Bookmarks">
     <property name="title">
diff --git a/src/src.pro b/src/src.pro
index ae4222a..6ad6b23 100644
--- a/src/src.pro
+++ b/src/src.pro
@@ -60,11 +60,12 @@ FORMS += tab_bookmarks.ui \
     toolbareditor.ui
 RESOURCES += resources/images.qrc
 
-QT += webkit \
+QT += webengine \
 	xml \
     network \
     widgets \
-    webkitwidgets \
+    webenginecore \
+    webenginewidgets \
     printsupport
 
 linux-g++*:{
@@ -114,20 +115,10 @@ unix:!macx: {
 
 greaterThan(QT_MAJOR_VERSION, 4) {
     # Qt 5
-    greaterThan(QT_MINOR_VERSION, 5) {
-        # Qt 5.6+
-        error("You use Qt5.6+ - QWebEngine is not yet suitable for kchmviewer and is not supported")
-        QT += webengine webenginewidgets
-        DEFINES += USE_WEBENGINE
-        SOURCES += viewwindow_webengine.cpp dataprovider_qwebengine.cpp
-        HEADERS += dataprovider_qwebengine.h viewwindow_webengine.h
-    } else {
-        # Qt 5.0-5.5
-        QT += webkit webkitwidgets
-        DEFINES += USE_WEBKIT
-        SOURCES += viewwindow_webkit.cpp dataprovider_qwebkit.cpp
-        HEADERS += dataprovider_qwebkit.h viewwindow_webkit.h
-    }
+    QT += webengine webenginewidgets
+    DEFINES += USE_WEBENGINE
+    SOURCES += viewwindow_webengine.cpp dataprovider_qwebengine.cpp
+    HEADERS += dataprovider_qwebengine.h viewwindow_webengine.h
 } else {
     message("Qt4 is not supported anymore, please do not report any errors")
     QT += webkit webkitwidgets
diff --git a/src/viewwindow_webengine.cpp b/src/viewwindow_webengine.cpp
index 9db2d4c..03ecf99 100644
--- a/src/viewwindow_webengine.cpp
+++ b/src/viewwindow_webengine.cpp
@@ -25,15 +25,19 @@
 #include <QWebEnginePage>
 #include <QWebEngineProfile>
 #include <QWebEngineSettings>
+#include <QWebEngineContextMenuData>
 
 #include "config.h"
 #include "viewwindow_webengine.h"
 #include "mainwindow.h"
+#include "navigationpanel.h"
 #include "viewwindowmgr.h"
 
 
 static const qreal ZOOM_FACTOR_CHANGE = 0.1;
 
+std::unique_ptr<DataProvider_QWebEngine> ViewWindow::g_provider;
+std::mutex ViewWindow::g_provider_lock;
 
 ViewWindow::ViewWindow( QWidget * parent )
     : QWebEngineView ( parent )
@@ -47,8 +51,15 @@ ViewWindow::ViewWindow( QWidget * parent )
 
     // Use our network emulation layer. I don't know if we transfer the ownership when we install it, so we create
     // one per page. May be unnecessary.
-    m_provider = new DataProvider_QWebEngine( this );
-    page()->profile()->installUrlSchemeHandler( ::mainWindow->chmFile()->ebookURLscheme().toUtf8(), m_provider );
+    {
+        std::lock_guard<std::mutex> provider_lock_guard(g_provider_lock);
+
+        if (!g_provider)
+        {
+            g_provider.reset(new DataProvider_QWebEngine(nullptr));
+	        page()->profile()->installUrlSchemeHandler("ms-its", g_provider.get());
+	    }
+	}
 
     // All links are going through us
     //page()->setLinkDelegationPolicy( QWebPage::DelegateAllLinks );
@@ -60,10 +71,15 @@ ViewWindow::ViewWindow( QWidget * parent )
     pal.setColor( QPalette::Inactive, QPalette::Highlight, pal.color(QPalette::Active, QPalette::Highlight) );
     pal.setColor( QPalette::Inactive, QPalette::HighlightedText, pal.color(QPalette::Active, QPalette::HighlightedText) );
     setPalette( pal );
+
+    connect(this, &QWebEngineView::urlChanged, [this] (const QUrl &url) {
+        ::mainWindow->navigator()->findUrlInContents(url);
+    });
 }
 
 ViewWindow::~ViewWindow()
 {
+    disconnect(this, &QWebEngineView::urlChanged, nullptr, nullptr);
 }
 
 void ViewWindow::invalidate( )
@@ -206,7 +222,6 @@ int ViewWindow::getScrollbarPosition()
         QApplication::processEvents();
     }
 
-    qDebug( "scroll value %d", value.load() );
     return value;
 }
 
@@ -248,16 +263,17 @@ void ViewWindow::contextMenuEvent(QContextMenuEvent *e)
 {
     // From Qt Assistant
     QMenu *m = new QMenu(0);
-/*    QString link = anchorAt( e->pos() );
+	const QWebEngineContextMenuData &data = page()->contextMenuData();
+	QString link                          = data.linkUrl().toString();
+
+	if (!link.isEmpty())
+	{
+		m->addAction(i18n("Open Link in a new tab\tShift+LMB"), ::mainWindow, SLOT(onOpenPageInNewTab()));
+		m->addAction(i18n("Open Link in a new background tab\tCtrl+LMB"), ::mainWindow, SLOT(onOpenPageInNewBackgroundTab()));
+		m->addSeparator();
+		setTabKeeper(link);
+	}
 
-    if ( !link.isEmpty() )
-    {
-        m->addAction( i18n("Open Link in a new tab\tShift+LMB"), ::mainWindow, SLOT( onOpenPageInNewTab() ) );
-        m->addAction( i18n("Open Link in a new background tab\tCtrl+LMB"), ::mainWindow, SLOT( onOpenPageInNewBackgroundTab() ) );
-        m->addSeparator();
-        setTabKeeper( link );
-    }
-*/
     ::mainWindow->setupPopupMenu( m );
     m->exec( e->globalPos() );
     delete m;
@@ -278,7 +294,7 @@ void ViewWindow::onLoadFinished ( bool )
 
 void ViewWindow::applySettings()
 {
-    QWebEngineSettings * setup = QWebEngineSettings::globalSettings();
+    QWebEngineSettings *setup = QWebEngineSettings::defaultSettings();
 
     setup->setAttribute( QWebEngineSettings::AutoLoadImages, pConfig->m_browserEnableImages );
     setup->setAttribute( QWebEngineSettings::JavascriptEnabled, pConfig->m_browserEnableJS );
@@ -288,3 +304,33 @@ void ViewWindow::applySettings()
     //setup->setAttribute( QWebEngineSettings::LocalStorageDatabaseEnabled, pConfig->m_browserEnableLocalStorage );
     setup->setAttribute( QWebEngineSettings::LocalStorageEnabled, pConfig->m_browserEnableLocalStorage );
 }
+
+QWebEngineView *ViewWindow::createWindow(QWebEnginePage::WebWindowType type)
+{
+	QWebEngineView *tab = nullptr;
+ 
+	switch (type)
+	{
+	case QWebEnginePage::WebBrowserWindow:
+	case QWebEnginePage::WebBrowserTab:
+	case QWebEnginePage::WebBrowserBackgroundTab:
+		{
+			bool active = (type != QWebEnginePage::WebBrowserBackgroundTab);
+
+			tab = ::mainWindow->viewWindowMgr()->addNewTab(active);
+			tab->setZoomFactor( ::mainWindow->currentBrowser()->zoomFactor() );
+
+			if (active)
+			{
+				tab->setFocus( Qt::OtherFocusReason );
+			}
+		}
+		break;
+
+	case QWebEnginePage::WebDialog:
+		//tab = ::mainWindow->viewWindowMgr()->addDialog();
+		break;
+	}
+
+	return tab;
+}
diff --git a/src/viewwindow_webengine.h b/src/viewwindow_webengine.h
index 1ab5a21..996e0e1 100644
--- a/src/viewwindow_webengine.h
+++ b/src/viewwindow_webengine.h
@@ -20,6 +20,8 @@
 #define VIEWWINDOW_WEBENGINE_H
 
 #include <QWebEngineView>
+#include <memory>
+#include <mutex>
 
 #include "kde-qt.h"
 #include "dataprovider_qwebengine.h"
@@ -49,6 +51,8 @@ class ViewWindow : public QWebEngineView
         // Apply the configuration settings (JS enabled etc) to the web renderer
         static  void    applySettings();
 
+		QWebEngineView* createWindow(QWebEnginePage::WebWindowType type);
+
         //! Invalidate current view, doing all the cleanups etc.
         void	invalidate();
 
@@ -126,7 +130,8 @@ class ViewWindow : public QWebEngineView
         int						m_storedScrollbarPosition;
 
         // Data provider
-        DataProvider_QWebEngine * m_provider;
+        static std::unique_ptr<DataProvider_QWebEngine> g_provider;
+        static std::mutex g_provider_lock;
 };
 
 #endif // VIEWWINDOW_WEBENGINE_H
diff --git a/src/viewwindowmgr.cpp b/src/viewwindowmgr.cpp
index 7a0b0e8..f7bac5f 100644
--- a/src/viewwindowmgr.cpp
+++ b/src/viewwindowmgr.cpp
@@ -21,6 +21,7 @@
 #include "viewwindow.h"
 #include "viewwindowmgr.h"
 
+#include <QWebEngineSettings>
 
 // A small overriden class to handle a middle click
 class ViewWindowTabWidget : public QTabWidget
@@ -141,12 +142,6 @@ ViewWindow * ViewWindowMgr::addNewTab( bool set_active )
 	// Set active if it is the first tab
 	if ( set_active || m_Windows.size() == 1 )
 		m_tabWidget->setCurrentWidget( tabdata.widget );
-	
-	// Handle clicking on link in browser window
-	connect( viewvnd,
-			 SIGNAL( linkClicked ( const QUrl& ) ),
-	         ::mainWindow, 
-			 SLOT( activateUrl( const QUrl& ) ) );
 
     connect( viewvnd, SIGNAL(dataLoaded(ViewWindow*)), this, SLOT(onWindowContentChanged(ViewWindow*)));
 
@@ -166,6 +161,13 @@ void ViewWindowMgr::closeAllWindows( )
 		closeWindow( m_Windows.first().widget );
 }
 
+ViewWindow* ViewWindowMgr::addDialog()
+{
+	ViewWindow *viewvnd = new ViewWindow(nullptr);
+	viewvnd->show();
+	return viewvnd;
+}
+
 void ViewWindowMgr::setTabName( ViewWindow * window )
 {
 	TabData * tab = findTab( window );
@@ -340,57 +342,25 @@ int ViewWindowMgr::currentPageIndex() const
 void ViewWindowMgr::onActivateFind()
 {
 	frameFind->show();
-	labelWrapped->setVisible( false );
 	editFind->setFocus( Qt::ShortcutFocusReason );
 	editFind->selectAll();
 }
 
 void ViewWindowMgr::find( bool backward )
 {
-    QWebPage::FindFlags webkitflags = 0;
+    QWebEnginePage::FindFlags webkitflags = 0;
 	
 	if ( checkCase->isChecked() )
-        webkitflags |= QWebPage::FindCaseSensitively;
+        webkitflags |= QWebEnginePage::FindCaseSensitively;
 	
 	if ( backward )
-        webkitflags |= QWebPage::FindBackward;
-
-    if ( pConfig->m_browserHighlightSearchResults )
-    {
-        // From the doc:
-        // If the HighlightAllOccurrences flag is passed, the
-        // function will highlight all occurrences that exist
-        // in the page. All subsequent calls will extend the
-        // highlight, rather than replace it, with occurrences
-        // of the new string.
-
-        // If the search text is different, we run the empty string search
-        // to discard old highlighting
-        if ( m_lastSearchedWord != editFind->text() )
-            current()->findText( "", webkitflags | QWebPage::HighlightAllOccurrences );
-
-        m_lastSearchedWord = editFind->text();
+        webkitflags |= QWebEnginePage::FindBackward;
 
-        // Now we call search with highlighting enabled, while the main search below will have
-        // it disabled. This leads in both having the highlighting results AND working forward/
-        // backward buttons.
-        current()->findText( editFind->text(), webkitflags | QWebPage::HighlightAllOccurrences );
-    }
-
-    // Pre-hide the wrapper
-    labelWrapped->hide();
-
-    bool found = current()->findText( editFind->text(), webkitflags );
-
-    // If we didn't find anything, enable the wrap and try again
-    if ( !found )
-    {
-        found = current()->findText( editFind->text(), webkitflags | QWebPage::FindWrapsAroundDocument );
-
-        if ( found )
-            labelWrapped->show();
-    }
+	current()->findText(editFind->text(), webkitflags, [this](bool found) { this->find_callback(found); });
+}
 
+void ViewWindowMgr::find_callback(bool found)
+{
 	if ( !frameFind->isVisible() )
 		frameFind->show();
 
@@ -436,13 +406,10 @@ void ViewWindowMgr::copyUrlToClipboard()
 
 void ViewWindowMgr::applyBrowserSettings()
 {
-	QWebSettings * setup = QWebSettings::globalSettings();
+	QWebEngineSettings *setup = QWebEngineSettings::defaultSettings();
 
-	setup->setAttribute( QWebSettings::AutoLoadImages, pConfig->m_browserEnableImages );
-	setup->setAttribute( QWebSettings::JavascriptEnabled, pConfig->m_browserEnableJS );
-	setup->setAttribute( QWebSettings::JavaEnabled, pConfig->m_browserEnableJava );
-	setup->setAttribute( QWebSettings::PluginsEnabled, pConfig->m_browserEnablePlugins );
-	setup->setAttribute( QWebSettings::OfflineStorageDatabaseEnabled, pConfig->m_browserEnableOfflineStorage );
-	setup->setAttribute( QWebSettings::LocalStorageDatabaseEnabled, pConfig->m_browserEnableLocalStorage );
-	setup->setAttribute( QWebSettings::LocalStorageEnabled, pConfig->m_browserEnableLocalStorage );
+	setup->setAttribute(QWebEngineSettings::AutoLoadImages, pConfig->m_browserEnableImages);
+	setup->setAttribute(QWebEngineSettings::JavascriptEnabled, pConfig->m_browserEnableJS);
+	setup->setAttribute(QWebEngineSettings::PluginsEnabled, pConfig->m_browserEnablePlugins);
+	setup->setAttribute(QWebEngineSettings::LocalStorageEnabled, pConfig->m_browserEnableLocalStorage);
 }
diff --git a/src/viewwindowmgr.h b/src/viewwindowmgr.h
index 7a60e31..384caa9 100644
--- a/src/viewwindowmgr.h
+++ b/src/viewwindowmgr.h
@@ -40,6 +40,8 @@ class ViewWindowMgr : public QWidget, public Ui::TabbedBrowser
 		// Adds a new tab, creating a new browser window
         ViewWindow	*	addNewTab( bool set_active );
 		
+		ViewWindow* addDialog();
+		
 		// Sets the tab name and updates Windows menu
         void	setTabName( ViewWindow* window );
 		
@@ -81,6 +83,7 @@ class ViewWindowMgr : public QWidget, public Ui::TabbedBrowser
 	
 	private:
 		void	find( bool backward = false );
+		void find_callback(bool found);
 		
 		typedef struct
 		{
diff --git a/src/window_browser.ui b/src/window_browser.ui
index 9c8a9ce..47ea620 100644
--- a/src/window_browser.ui
+++ b/src/window_browser.ui
@@ -134,34 +134,6 @@
         </property>
        </widget>
       </item>
-      <item>
-       <widget class="QLabel" name="labelWrapped">
-        <property name="minimumSize">
-         <size>
-          <width>0</width>
-          <height>20</height>
-         </size>
-        </property>
-        <property name="maximumSize">
-         <size>
-          <width>1050</width>
-          <height>20</height>
-         </size>
-        </property>
-        <property name="text">
-         <string>&lt;img src=&quot;:/images/find_wrap.png&quot;&gt;&amp;nbsp;Search wrapped</string>
-        </property>
-        <property name="textFormat">
-         <enum>Qt::RichText</enum>
-        </property>
-        <property name="scaledContents">
-         <bool>true</bool>
-        </property>
-        <property name="alignment">
-         <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignVCenter</set>
-        </property>
-       </widget>
-      </item>
       <item>
        <spacer>
         <property name="orientation">
