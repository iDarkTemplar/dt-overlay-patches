From 20b768eb5fe3ddb42ac5742f174d066f05a4e4fe Mon Sep 17 00:00:00 2001
From: "i.Dark_Templar" <darktemplar@dark-templar-archives.net>
Date: Wed, 5 May 2021 17:50:46 +0300
Subject: [PATCH] Fix build of clangrefactoring plugin

---
 .../clangrefactoring/clangrefactoringplugin.cpp      |  3 +--
 .../clangrefactoring/qtcreatorsearchhandle.cpp       |  6 ++----
 src/plugins/clangrefactoring/qtcreatorsearchhandle.h |  4 +---
 src/plugins/clangrefactoring/refactoringclient.cpp   | 12 ++++++------
 src/plugins/clangrefactoring/searchhandle.h          |  4 +---
 5 files changed, 11 insertions(+), 18 deletions(-)

diff --git a/src/plugins/clangrefactoring/clangrefactoringplugin.cpp b/src/plugins/clangrefactoring/clangrefactoringplugin.cpp
index 60ae051a94..86ad77fa18 100644
--- a/src/plugins/clangrefactoring/clangrefactoringplugin.cpp
+++ b/src/plugins/clangrefactoring/clangrefactoringplugin.cpp
@@ -78,8 +78,7 @@ std::unique_ptr<ClangRefactoringPluginData> ClangRefactoringPlugin::d;
 class ClangRefactoringPluginData
 {
 public:
-    using QuerySqliteReadStatementFactory = QuerySqliteStatementFactory<Sqlite::Database,
-                                                                        Sqlite::ReadStatement>;
+    using QuerySqliteReadStatementFactory = QuerySqliteStatementFactory<Sqlite::Database>;
     Sqlite::Database database{Utils::PathString{Core::ICore::cacheResourcePath()
                                                 + "/symbol-experimental-v1.db"},
                               1000ms};
diff --git a/src/plugins/clangrefactoring/qtcreatorsearchhandle.cpp b/src/plugins/clangrefactoring/qtcreatorsearchhandle.cpp
index c3924dbf4a..f8fbdfe379 100644
--- a/src/plugins/clangrefactoring/qtcreatorsearchhandle.cpp
+++ b/src/plugins/clangrefactoring/qtcreatorsearchhandle.cpp
@@ -38,11 +38,9 @@ QtCreatorSearchHandle::QtCreatorSearchHandle(Core::SearchResult *searchResult)
     Core::ProgressManager::addTask(promise.future(), title, "clang query", {});
 }
 
-void QtCreatorSearchHandle::addResult(const QString &fileName,
-                                      const QString &lineText,
-                                      Core::Search::TextRange textRange)
+void QtCreatorSearchHandle::addResult(const Core::SearchResultItem &item)
 {
-    searchResult->addResult(fileName, lineText, textRange);
+    searchResult->addResult(item);
 }
 
 void QtCreatorSearchHandle::setExpectedResultCount(uint count)
diff --git a/src/plugins/clangrefactoring/qtcreatorsearchhandle.h b/src/plugins/clangrefactoring/qtcreatorsearchhandle.h
index 8e391e2688..45620487a2 100644
--- a/src/plugins/clangrefactoring/qtcreatorsearchhandle.h
+++ b/src/plugins/clangrefactoring/qtcreatorsearchhandle.h
@@ -38,9 +38,7 @@ class QtCreatorSearchHandle final : public SearchHandle
 public:
     QtCreatorSearchHandle(Core::SearchResult *searchResult);
 
-    void addResult(const QString &fileName,
-                               const QString &lineText,
-                               Core::Search::TextRange textRange) override;
+    void addResult(const Core::SearchResultItem &item) override;
 
     void setExpectedResultCount(uint count) override;
     void setResultCounter(uint counter) override;
diff --git a/src/plugins/clangrefactoring/refactoringclient.cpp b/src/plugins/clangrefactoring/refactoringclient.cpp
index 4244f44167..a357f00034 100644
--- a/src/plugins/clangrefactoring/refactoringclient.cpp
+++ b/src/plugins/clangrefactoring/refactoringclient.cpp
@@ -117,12 +117,12 @@ void RefactoringClient::addSearchResult(const ClangBackEnd::SourceRangeWithTextC
 {
     auto &filePathCache = m_refactoringEngine->filePathCache();
 
-    m_searchHandle->addResult(QString(filePathCache.filePath(sourceRangeWithText.filePathId()).path()),
-                              QString(sourceRangeWithText.text),
-                              {{int(sourceRangeWithText.start.line),
-                                int(sourceRangeWithText.start.column - 1)},
-                               {int(sourceRangeWithText.end.line),
-                                int(sourceRangeWithText.end.column - 1)}});
+    Core::SearchResultItem item;
+    item.setFilePath(Utils::FilePath::fromString(QString(filePathCache.filePath(sourceRangeWithText.filePathId()).path())));
+    item.setLineText(QString(sourceRangeWithText.text));
+    item.setMainRange({{int(sourceRangeWithText.start.line), int(sourceRangeWithText.start.column - 1)}, {int(sourceRangeWithText.end.line), int(sourceRangeWithText.end.column - 1)}});
+
+    m_searchHandle->addResult(item);
 }
 
 void RefactoringClient::setResultCounterAndSendSearchIsFinishedIfFinished()
diff --git a/src/plugins/clangrefactoring/searchhandle.h b/src/plugins/clangrefactoring/searchhandle.h
index 804af2c370..942e6543bb 100644
--- a/src/plugins/clangrefactoring/searchhandle.h
+++ b/src/plugins/clangrefactoring/searchhandle.h
@@ -40,9 +40,7 @@ public:
 
     virtual ~SearchHandle();
 
-    virtual void addResult(const QString &fileName,
-                           const QString &lineText,
-                           Core::Search::TextRange textRange) = 0;
+    virtual void addResult(const Core::SearchResultItem &item) = 0;
 
     virtual void setExpectedResultCount(uint count) = 0;
     virtual void setResultCounter(uint counter) = 0;
-- 
2.26.3

