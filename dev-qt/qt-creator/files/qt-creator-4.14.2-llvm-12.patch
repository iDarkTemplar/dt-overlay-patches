From 430d10ebd2abdf2345ff4c4dd0213973287290d3 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Bj=C3=B6rn=20Sch=C3=A4pers?= <bjoern@hazardy.de>
Date: Fri, 29 Jan 2021 18:01:37 +0100
Subject: [PATCH 1/2] clangformat: Fix build with LLVM 12

Change-Id: I493afce92b16291cf66fc510129f2154a7162847
Reviewed-by: David Schulz <david.schulz@qt.io>
---
 src/plugins/clangformat/clangformatutils.cpp | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/src/plugins/clangformat/clangformatutils.cpp b/src/plugins/clangformat/clangformatutils.cpp
index 8e11c15364..a249327d0e 100644
--- a/src/plugins/clangformat/clangformatutils.cpp
+++ b/src/plugins/clangformat/clangformatutils.cpp
@@ -51,8 +51,13 @@ static clang::format::FormatStyle qtcStyle()
     style.Language = FormatStyle::LK_Cpp;
     style.AccessModifierOffset = -4;
     style.AlignAfterOpenBracket = FormatStyle::BAS_Align;
+#if LLVM_VERSION_MAJOR >= 12
+    style.AlignConsecutiveAssignments = FormatStyle::ACS_None;
+    style.AlignConsecutiveDeclarations = FormatStyle::ACS_None;
+#else
     style.AlignConsecutiveAssignments = false;
     style.AlignConsecutiveDeclarations = false;
+#endif
     style.AlignEscapedNewlines = FormatStyle::ENAS_DontAlign;
 #if LLVM_VERSION_MAJOR >= 11
     style.AlignOperands = FormatStyle::OAS_Align;
-- 
2.26.3


From e4aff2d2bd4a5a8c41e47f49645973f02b45de4a Mon Sep 17 00:00:00 2001
From: "i.Dark_Templar" <darktemplar@dark-templar-archives.net>
Date: Sat, 17 Apr 2021 10:31:32 +0300
Subject: [PATCH 2/2] Fix building with clang-12

---
 .../clangpchmanagerbackend/source/generatepchactionfactory.h | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/src/tools/clangpchmanagerbackend/source/generatepchactionfactory.h b/src/tools/clangpchmanagerbackend/source/generatepchactionfactory.h
index 3993ccc651..ee1cf63220 100644
--- a/src/tools/clangpchmanagerbackend/source/generatepchactionfactory.h
+++ b/src/tools/clangpchmanagerbackend/source/generatepchactionfactory.h
@@ -28,6 +28,7 @@
 #include <clang/Tooling/Tooling.h>
 
 #include <clang/Basic/DiagnosticOptions.h>
+#include <clang/Basic/Version.h>
 #include <clang/Frontend/CompilerInstance.h>
 #include <clang/Frontend/FrontendActions.h>
 #include <clang/Lex/PreprocessorOptions.h>
@@ -44,7 +45,11 @@ public:
 
     bool BeginInvocation(clang::CompilerInstance &compilerInstance) override
     {
+#if CLANG_VERSION_MAJOR >= 12
+        compilerInstance.getPreprocessorOpts().DisablePCHOrModuleValidation = clang::DisableValidationForModuleKind::PCH;
+#else
         compilerInstance.getPreprocessorOpts().DisablePCHValidation = true;
+#endif
         compilerInstance.getPreprocessorOpts().AllowPCHWithCompilerErrors = true;
         compilerInstance.getDiagnosticOpts().ErrorLimit = 0;
         compilerInstance.getFrontendOpts().SkipFunctionBodies = true;
-- 
2.26.3

